/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { AnalyzeResults } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { FormRecognizerClient } from "../formRecognizerClient";
import {
  AnalyzeResultsGetOptionalParams,
  AnalyzeResultsGetResponse
} from "../models";

/** Class containing AnalyzeResults operations. */
export class AnalyzeResultsImpl implements AnalyzeResults {
  private readonly client: FormRecognizerClient;

  /**
   * Initialize a new instance of the class AnalyzeResults class.
   * @param client Reference to the service client
   */
  constructor(client: FormRecognizerClient) {
    this.client = client;
  }

  /**
   * @param modelId
   * @param resultId
   * @param options The options parameters.
   */
  get(
    modelId: string,
    resultId: string,
    options?: AnalyzeResultsGetOptionalParams
  ): Promise<AnalyzeResultsGetResponse> {
    return this.client.sendOperationRequest(
      { modelId, resultId, options },
      getOperationSpec
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const getOperationSpec: coreClient.OperationSpec = {
  path: "/formrecognizer/documentModels/{modelId}/analyzeResults/{resultId}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.ModelsAnalyzeResultsAnalyzeOperationState
    },
    400: {
      bodyMapper: Mappers.ErrorResponse
    },
    403: {
      bodyMapper: Mappers.ErrorResponse
    },
    404: {
      bodyMapper: Mappers.ErrorResponse
    },
    429: {
      bodyMapper: Mappers.ErrorResponse
    },
    500: {
      bodyMapper: Mappers.ErrorResponse
    },
    502: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [Parameters.$host, Parameters.modelId, Parameters.resultId],
  headerParameters: [Parameters.accept],
  serializer
};
