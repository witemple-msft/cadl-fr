/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const ResourceInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceInfo",
    modelProperties: {
      customDocumentModels: {
        serializedName: "customDocumentModels",
        type: {
          name: "Composite",
          className: "CustomDocumentModelInfo"
        }
      }
    }
  }
};

export const CustomDocumentModelInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CustomDocumentModelInfo",
    modelProperties: {
      count: {
        serializedName: "count",
        required: true,
        type: {
          name: "Number"
        }
      },
      limit: {
        serializedName: "limit",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorModel"
        }
      }
    }
  }
};

export const ErrorModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorModel",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorModel"
            }
          }
        }
      },
      innererror: {
        serializedName: "innererror",
        type: {
          name: "Composite",
          className: "ErrorModel"
        }
      }
    }
  }
};

export const CopyAuthorizationRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CopyAuthorizationRequest",
    modelProperties: {
      modelId: {
        serializedName: "modelId",
        required: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const CopyAuthorization: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CopyAuthorization",
    modelProperties: {
      targetResourceId: {
        serializedName: "targetResourceId",
        required: true,
        type: {
          name: "String"
        }
      },
      targetResoruceRegion: {
        serializedName: "targetResoruceRegion",
        required: true,
        type: {
          name: "String"
        }
      },
      targetModelId: {
        serializedName: "targetModelId",
        required: true,
        type: {
          name: "String"
        }
      },
      targetModelLocation: {
        serializedName: "targetModelLocation",
        required: true,
        type: {
          name: "String"
        }
      },
      accessToken: {
        serializedName: "accessToken",
        required: true,
        type: {
          name: "String"
        }
      },
      expirationDateTime: {
        serializedName: "expirationDateTime",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BuildModelRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BuildModelRequest",
    modelProperties: {
      modelId: {
        serializedName: "modelId",
        required: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      buildMode: {
        serializedName: "buildMode",
        required: true,
        type: {
          name: "String"
        }
      },
      azureBlobSource: {
        serializedName: "azureBlobSource",
        type: {
          name: "Composite",
          className: "AzureBlobContentSource"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const AzureBlobContentSource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureBlobContentSource",
    modelProperties: {
      containerUrl: {
        serializedName: "containerUrl",
        required: true,
        type: {
          name: "String"
        }
      },
      prefix: {
        serializedName: "prefix",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComposeModelRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComposeModelRequest",
    modelProperties: {
      modelId: {
        serializedName: "modelId",
        required: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      componentModels: {
        serializedName: "componentModels",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ComponentModelInfo"
            }
          }
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const ComponentModelInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComponentModelInfo",
    modelProperties: {
      modelId: {
        serializedName: "modelId",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PageModelsModelSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PageModelsModelSummary",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ModelsModelSummary"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ModelsModelSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ModelsModelSummary",
    modelProperties: {
      modelId: {
        serializedName: "modelId",
        required: true,
        type: {
          name: "String"
        }
      },
      createdDateTime: {
        serializedName: "createdDateTime",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const ModelsDocTypeInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ModelsDocTypeInfo",
    modelProperties: {
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      buildMode: {
        serializedName: "buildMode",
        type: {
          name: "String"
        }
      },
      fieldSchema: {
        serializedName: "fieldSchema",
        required: true,
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Composite", className: "ModelsDocumentFieldSchema" }
          }
        }
      },
      fieldConfidence: {
        serializedName: "fieldConfidence",
        required: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const ModelsDocumentFieldSchema: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ModelsDocumentFieldSchema",
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      example: {
        serializedName: "example",
        type: {
          name: "String"
        }
      },
      items: {
        serializedName: "items",
        type: {
          name: "Composite",
          className: "ModelsDocumentFieldSchema"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Composite", className: "ModelsDocumentFieldSchema" }
          }
        }
      }
    }
  }
};

export const ModelsAnalyzeResultsAnalyzeOperationState: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ModelsAnalyzeResultsAnalyzeOperationState",
    modelProperties: {
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      createdDateTime: {
        serializedName: "createdDateTime",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      lastUpdatedDateTime: {
        serializedName: "lastUpdatedDateTime",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorModel"
        }
      },
      analyzeResult: {
        serializedName: "analyzeResult",
        type: {
          name: "Composite",
          className: "ModelsAnalyzeResultsAnalyzeResult"
        }
      }
    }
  }
};

export const ModelsAnalyzeResultsAnalyzeResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ModelsAnalyzeResultsAnalyzeResult",
    modelProperties: {
      apiVersion: {
        serializedName: "apiVersion",
        required: true,
        type: {
          name: "String"
        }
      },
      modelId: {
        serializedName: "modelId",
        required: true,
        type: {
          name: "String"
        }
      },
      stringIndexType: {
        serializedName: "stringIndexType",
        required: true,
        type: {
          name: "String"
        }
      },
      content: {
        serializedName: "content",
        required: true,
        type: {
          name: "String"
        }
      },
      pages: {
        serializedName: "pages",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ModelsAnalyzeResultsDocumentElementsPage"
            }
          }
        }
      },
      tables: {
        serializedName: "tables",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ModelsAnalyzeResultsDocumentElementsTable"
            }
          }
        }
      },
      keyValuePairs: {
        serializedName: "keyValuePairs",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ModelsAnalyzeResultsDocumentElementsKeyValuePair"
            }
          }
        }
      },
      entities: {
        serializedName: "entities",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ModelsAnalyzeResultsDocumentElementsEntity"
            }
          }
        }
      },
      styles: {
        serializedName: "styles",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ModelsAnalyzeResultsDocumentElementsStyle"
            }
          }
        }
      },
      languages: {
        serializedName: "languages",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ModelsAnalyzeResultsDocumentElementsLanguage"
            }
          }
        }
      },
      documents: {
        serializedName: "documents",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ModelsAnalyzeResultsDocumentElementsDocument"
            }
          }
        }
      }
    }
  }
};

export const ModelsAnalyzeResultsDocumentElementsPage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ModelsAnalyzeResultsDocumentElementsPage",
    modelProperties: {
      pageNumber: {
        serializedName: "pageNumber",
        required: true,
        type: {
          name: "Number"
        }
      },
      angle: {
        serializedName: "angle",
        required: true,
        type: {
          name: "Number"
        }
      },
      width: {
        serializedName: "width",
        required: true,
        type: {
          name: "Number"
        }
      },
      height: {
        serializedName: "height",
        required: true,
        type: {
          name: "Number"
        }
      },
      unit: {
        serializedName: "unit",
        required: true,
        type: {
          name: "String"
        }
      },
      spans: {
        serializedName: "spans",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ModelsAnalyzeResultsDocumentElementsSpan"
            }
          }
        }
      },
      words: {
        serializedName: "words",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ModelsAnalyzeResultsDocumentElementsWord"
            }
          }
        }
      },
      selectionMarks: {
        serializedName: "selectionMarks",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ModelsAnalyzeResultsDocumentElementsSelectionMark"
            }
          }
        }
      },
      lines: {
        serializedName: "lines",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ModelsAnalyzeResultsDocumentElementsLine"
            }
          }
        }
      }
    }
  }
};

export const ModelsAnalyzeResultsDocumentElementsSpan: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ModelsAnalyzeResultsDocumentElementsSpan",
    modelProperties: {
      offset: {
        serializedName: "offset",
        required: true,
        type: {
          name: "Number"
        }
      },
      length: {
        serializedName: "length",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ModelsAnalyzeResultsDocumentElementsWord: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ModelsAnalyzeResultsDocumentElementsWord",
    modelProperties: {
      content: {
        serializedName: "content",
        required: true,
        type: {
          name: "String"
        }
      },
      span: {
        serializedName: "span",
        type: {
          name: "Composite",
          className: "ModelsAnalyzeResultsDocumentElementsSpan"
        }
      },
      boundingBox: {
        serializedName: "boundingBox",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Number"
            }
          }
        }
      },
      confidence: {
        serializedName: "confidence",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ModelsAnalyzeResultsDocumentElementsSelectionMark: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ModelsAnalyzeResultsDocumentElementsSelectionMark",
    modelProperties: {
      state: {
        serializedName: "state",
        required: true,
        type: {
          name: "String"
        }
      },
      span: {
        serializedName: "span",
        type: {
          name: "Composite",
          className: "ModelsAnalyzeResultsDocumentElementsSpan"
        }
      },
      boundingBox: {
        serializedName: "boundingBox",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Number"
            }
          }
        }
      },
      confidence: {
        serializedName: "confidence",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ModelsAnalyzeResultsDocumentElementsLine: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ModelsAnalyzeResultsDocumentElementsLine",
    modelProperties: {
      content: {
        serializedName: "content",
        required: true,
        type: {
          name: "String"
        }
      },
      boundingBox: {
        serializedName: "boundingBox",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Number"
            }
          }
        }
      },
      spans: {
        serializedName: "spans",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ModelsAnalyzeResultsDocumentElementsSpan"
            }
          }
        }
      }
    }
  }
};

export const ModelsAnalyzeResultsDocumentElementsTable: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ModelsAnalyzeResultsDocumentElementsTable",
    modelProperties: {
      rowCount: {
        serializedName: "rowCount",
        required: true,
        type: {
          name: "Number"
        }
      },
      columnCount: {
        serializedName: "columnCount",
        required: true,
        type: {
          name: "Number"
        }
      },
      cells: {
        serializedName: "cells",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ModelsAnalyzeResultsDocumentElementsTableCell"
            }
          }
        }
      },
      boundingRegions: {
        serializedName: "boundingRegions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ModelsAnalyzeResultsDocumentElementsBoundingRegion"
            }
          }
        }
      },
      spans: {
        serializedName: "spans",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ModelsAnalyzeResultsDocumentElementsSpan"
            }
          }
        }
      }
    }
  }
};

export const ModelsAnalyzeResultsDocumentElementsTableCell: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ModelsAnalyzeResultsDocumentElementsTableCell",
    modelProperties: {
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      rowIndex: {
        serializedName: "rowIndex",
        required: true,
        type: {
          name: "Number"
        }
      },
      columnIndex: {
        serializedName: "columnIndex",
        required: true,
        type: {
          name: "Number"
        }
      },
      rowSpan: {
        serializedName: "rowSpan",
        type: {
          name: "Number"
        }
      },
      columnSpan: {
        serializedName: "columnSpan",
        type: {
          name: "Number"
        }
      },
      content: {
        serializedName: "content",
        required: true,
        type: {
          name: "String"
        }
      },
      boundingRegions: {
        serializedName: "boundingRegions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ModelsAnalyzeResultsDocumentElementsBoundingRegion"
            }
          }
        }
      },
      spans: {
        serializedName: "spans",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ModelsAnalyzeResultsDocumentElementsSpan"
            }
          }
        }
      }
    }
  }
};

export const ModelsAnalyzeResultsDocumentElementsBoundingRegion: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ModelsAnalyzeResultsDocumentElementsBoundingRegion",
    modelProperties: {
      pageNumber: {
        serializedName: "pageNumber",
        required: true,
        type: {
          name: "Number"
        }
      },
      boundingBox: {
        serializedName: "boundingBox",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Number"
            }
          }
        }
      }
    }
  }
};

export const ModelsAnalyzeResultsDocumentElementsKeyValuePair: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ModelsAnalyzeResultsDocumentElementsKeyValuePair",
    modelProperties: {
      key: {
        serializedName: "key",
        type: {
          name: "Composite",
          className: "ModelsAnalyzeResultsDocumentElementsKeyValueElement"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "Composite",
          className: "ModelsAnalyzeResultsDocumentElementsKeyValueElement"
        }
      },
      confidence: {
        serializedName: "confidence",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ModelsAnalyzeResultsDocumentElementsKeyValueElement: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ModelsAnalyzeResultsDocumentElementsKeyValueElement",
    modelProperties: {
      content: {
        serializedName: "content",
        required: true,
        type: {
          name: "String"
        }
      },
      boundingRegions: {
        serializedName: "boundingRegions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ModelsAnalyzeResultsDocumentElementsBoundingRegion"
            }
          }
        }
      },
      spans: {
        serializedName: "spans",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ModelsAnalyzeResultsDocumentElementsSpan"
            }
          }
        }
      }
    }
  }
};

export const ModelsAnalyzeResultsDocumentElementsEntity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ModelsAnalyzeResultsDocumentElementsEntity",
    modelProperties: {
      category: {
        serializedName: "category",
        required: true,
        type: {
          name: "String"
        }
      },
      subCategory: {
        serializedName: "subCategory",
        type: {
          name: "String"
        }
      },
      content: {
        serializedName: "content",
        required: true,
        type: {
          name: "String"
        }
      },
      boundingRegions: {
        serializedName: "boundingRegions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ModelsAnalyzeResultsDocumentElementsBoundingRegion"
            }
          }
        }
      },
      spans: {
        serializedName: "spans",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ModelsAnalyzeResultsDocumentElementsSpan"
            }
          }
        }
      },
      confidence: {
        serializedName: "confidence",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ModelsAnalyzeResultsDocumentElementsStyle: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ModelsAnalyzeResultsDocumentElementsStyle",
    modelProperties: {
      isHandwritten: {
        serializedName: "isHandwritten",
        type: {
          name: "Boolean"
        }
      },
      spans: {
        serializedName: "spans",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ModelsAnalyzeResultsDocumentElementsSpan"
            }
          }
        }
      },
      confidence: {
        serializedName: "confidence",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ModelsAnalyzeResultsDocumentElementsLanguage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ModelsAnalyzeResultsDocumentElementsLanguage",
    modelProperties: {
      languageCode: {
        serializedName: "languageCode",
        required: true,
        type: {
          name: "String"
        }
      },
      spans: {
        serializedName: "spans",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ModelsAnalyzeResultsDocumentElementsSpan"
            }
          }
        }
      },
      confidence: {
        serializedName: "confidence",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ModelsAnalyzeResultsDocumentElementsDocument: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ModelsAnalyzeResultsDocumentElementsDocument",
    modelProperties: {
      docType: {
        serializedName: "docType",
        required: true,
        type: {
          name: "String"
        }
      },
      boundingRegions: {
        serializedName: "boundingRegions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ModelsAnalyzeResultsDocumentElementsBoundingRegion"
            }
          }
        }
      },
      spans: {
        serializedName: "spans",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ModelsAnalyzeResultsDocumentElementsSpan"
            }
          }
        }
      },
      fields: {
        serializedName: "fields",
        required: true,
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className:
                "Components1Jq6PnzSchemasModelsAnalyzeresultsDocumentelementsDocumentPropertiesFieldsAdditionalproperties"
            }
          }
        }
      },
      confidence: {
        serializedName: "confidence",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Components1Jq6PnzSchemasModelsAnalyzeresultsDocumentelementsDocumentPropertiesFieldsAdditionalproperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Components1Jq6PnzSchemasModelsAnalyzeresultsDocumentelementsDocumentPropertiesFieldsAdditionalproperties"
  }
};

export const ModelsAnalyzeResultsDocumentElementsStringField: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ModelsAnalyzeResultsDocumentElementsStringField",
    modelProperties: {
      type: {
        defaultValue: "string",
        isConstant: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      valueString: {
        serializedName: "valueString",
        type: {
          name: "String"
        }
      },
      content: {
        serializedName: "content",
        required: true,
        type: {
          name: "String"
        }
      },
      boundingRegions: {
        serializedName: "boundingRegions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ModelsAnalyzeResultsDocumentElementsBoundingRegion"
            }
          }
        }
      },
      spans: {
        serializedName: "spans",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ModelsAnalyzeResultsDocumentElementsSpan"
            }
          }
        }
      },
      confidence: {
        serializedName: "confidence",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ModelsAnalyzeResultsDocumentElementsDateField: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ModelsAnalyzeResultsDocumentElementsDateField",
    modelProperties: {
      type: {
        defaultValue: "date",
        isConstant: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      valueDate: {
        serializedName: "valueDate",
        type: {
          name: "Date"
        }
      },
      content: {
        serializedName: "content",
        required: true,
        type: {
          name: "String"
        }
      },
      boundingRegions: {
        serializedName: "boundingRegions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ModelsAnalyzeResultsDocumentElementsBoundingRegion"
            }
          }
        }
      },
      spans: {
        serializedName: "spans",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ModelsAnalyzeResultsDocumentElementsSpan"
            }
          }
        }
      },
      confidence: {
        serializedName: "confidence",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ModelsAnalyzeResultsDocumentElementsTimeField: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ModelsAnalyzeResultsDocumentElementsTimeField",
    modelProperties: {
      type: {
        defaultValue: "time",
        isConstant: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      valueTime: {
        serializedName: "valueTime",
        type: {
          name: "String"
        }
      },
      content: {
        serializedName: "content",
        required: true,
        type: {
          name: "String"
        }
      },
      boundingRegions: {
        serializedName: "boundingRegions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ModelsAnalyzeResultsDocumentElementsBoundingRegion"
            }
          }
        }
      },
      spans: {
        serializedName: "spans",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ModelsAnalyzeResultsDocumentElementsSpan"
            }
          }
        }
      },
      confidence: {
        serializedName: "confidence",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ModelsAnalyzeResultsDocumentElementsPhoneNumberField: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ModelsAnalyzeResultsDocumentElementsPhoneNumberField",
    modelProperties: {
      type: {
        defaultValue: "phoneNumber",
        isConstant: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      valuePhoneNumber: {
        serializedName: "valuePhoneNumber",
        type: {
          name: "String"
        }
      },
      content: {
        serializedName: "content",
        required: true,
        type: {
          name: "String"
        }
      },
      boundingRegions: {
        serializedName: "boundingRegions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ModelsAnalyzeResultsDocumentElementsBoundingRegion"
            }
          }
        }
      },
      spans: {
        serializedName: "spans",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ModelsAnalyzeResultsDocumentElementsSpan"
            }
          }
        }
      },
      confidence: {
        serializedName: "confidence",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ModelsAnalyzeResultsDocumentElementsIntegerField: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ModelsAnalyzeResultsDocumentElementsIntegerField",
    modelProperties: {
      type: {
        defaultValue: "integer",
        isConstant: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      valueInteger: {
        defaultValue: "int64",
        isConstant: true,
        serializedName: "valueInteger",
        type: {
          name: "String"
        }
      },
      content: {
        serializedName: "content",
        required: true,
        type: {
          name: "String"
        }
      },
      boundingRegions: {
        serializedName: "boundingRegions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ModelsAnalyzeResultsDocumentElementsBoundingRegion"
            }
          }
        }
      },
      spans: {
        serializedName: "spans",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ModelsAnalyzeResultsDocumentElementsSpan"
            }
          }
        }
      },
      confidence: {
        serializedName: "confidence",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ModelsAnalyzeResultsDocumentElementsSelectionMarkField: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ModelsAnalyzeResultsDocumentElementsSelectionMarkField",
    modelProperties: {
      type: {
        defaultValue: "selectionMark",
        isConstant: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      valueSelectionMark: {
        serializedName: "valueSelectionMark",
        type: {
          name: "String"
        }
      },
      content: {
        serializedName: "content",
        required: true,
        type: {
          name: "String"
        }
      },
      boundingRegions: {
        serializedName: "boundingRegions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ModelsAnalyzeResultsDocumentElementsBoundingRegion"
            }
          }
        }
      },
      spans: {
        serializedName: "spans",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ModelsAnalyzeResultsDocumentElementsSpan"
            }
          }
        }
      },
      confidence: {
        serializedName: "confidence",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ModelsAnalyzeResultsDocumentElementsSignatureField: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ModelsAnalyzeResultsDocumentElementsSignatureField",
    modelProperties: {
      type: {
        defaultValue: "signature",
        isConstant: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      valueSignature: {
        serializedName: "valueSignature",
        type: {
          name: "String"
        }
      },
      content: {
        serializedName: "content",
        required: true,
        type: {
          name: "String"
        }
      },
      boundingRegions: {
        serializedName: "boundingRegions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ModelsAnalyzeResultsDocumentElementsBoundingRegion"
            }
          }
        }
      },
      spans: {
        serializedName: "spans",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ModelsAnalyzeResultsDocumentElementsSpan"
            }
          }
        }
      },
      confidence: {
        serializedName: "confidence",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ModelsAnalyzeResultsDocumentElementsCountryRegionField: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ModelsAnalyzeResultsDocumentElementsCountryRegionField",
    modelProperties: {
      type: {
        defaultValue: "countryRegion",
        isConstant: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      valueCountryRegion: {
        serializedName: "valueCountryRegion",
        type: {
          name: "String"
        }
      },
      content: {
        serializedName: "content",
        required: true,
        type: {
          name: "String"
        }
      },
      boundingRegions: {
        serializedName: "boundingRegions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ModelsAnalyzeResultsDocumentElementsBoundingRegion"
            }
          }
        }
      },
      spans: {
        serializedName: "spans",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ModelsAnalyzeResultsDocumentElementsSpan"
            }
          }
        }
      },
      confidence: {
        serializedName: "confidence",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ModelsAnalyzeResultsDocumentElementsCurrencyField: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ModelsAnalyzeResultsDocumentElementsCurrencyField",
    modelProperties: {
      type: {
        defaultValue: "currency",
        isConstant: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      valueCurrency: {
        serializedName: "valueCurrency",
        type: {
          name: "Composite",
          className: "ModelsAnalyzeResultsDocumentElementsCurrencyValue"
        }
      },
      content: {
        serializedName: "content",
        required: true,
        type: {
          name: "String"
        }
      },
      boundingRegions: {
        serializedName: "boundingRegions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ModelsAnalyzeResultsDocumentElementsBoundingRegion"
            }
          }
        }
      },
      spans: {
        serializedName: "spans",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ModelsAnalyzeResultsDocumentElementsSpan"
            }
          }
        }
      },
      confidence: {
        serializedName: "confidence",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ModelsAnalyzeResultsDocumentElementsCurrencyValue: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ModelsAnalyzeResultsDocumentElementsCurrencyValue",
    modelProperties: {
      amount: {
        serializedName: "amount",
        required: true,
        type: {
          name: "Number"
        }
      },
      currencySymbol: {
        serializedName: "currencySymbol",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ModelsAnalyzeResultsDocumentElementsArrayField: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ModelsAnalyzeResultsDocumentElementsArrayField",
    modelProperties: {
      type: {
        defaultValue: "array",
        isConstant: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      valueArray: {
        serializedName: "valueArray",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className:
                "ModelsAnalyzeResultsDocumentElementsArrayFieldValueArrayItem"
            }
          }
        }
      },
      content: {
        serializedName: "content",
        required: true,
        type: {
          name: "String"
        }
      },
      boundingRegions: {
        serializedName: "boundingRegions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ModelsAnalyzeResultsDocumentElementsBoundingRegion"
            }
          }
        }
      },
      spans: {
        serializedName: "spans",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ModelsAnalyzeResultsDocumentElementsSpan"
            }
          }
        }
      },
      confidence: {
        serializedName: "confidence",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ModelsAnalyzeResultsDocumentElementsArrayFieldValueArrayItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ModelsAnalyzeResultsDocumentElementsArrayFieldValueArrayItem"
  }
};

export const ModelsAnalyzeResultsDocumentElementsObjectField: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ModelsAnalyzeResultsDocumentElementsObjectField",
    modelProperties: {
      type: {
        defaultValue: "object",
        isConstant: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      valueObject: {
        serializedName: "valueObject",
        required: true,
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className:
                "Components1MheujySchemasModelsAnalyzeresultsDocumentelementsObjectfieldPropertiesValueobjectAdditionalproperties"
            }
          }
        }
      },
      content: {
        serializedName: "content",
        required: true,
        type: {
          name: "String"
        }
      },
      boundingRegions: {
        serializedName: "boundingRegions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ModelsAnalyzeResultsDocumentElementsBoundingRegion"
            }
          }
        }
      },
      spans: {
        serializedName: "spans",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ModelsAnalyzeResultsDocumentElementsSpan"
            }
          }
        }
      },
      confidence: {
        serializedName: "confidence",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Components1MheujySchemasModelsAnalyzeresultsDocumentelementsObjectfieldPropertiesValueobjectAdditionalproperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className:
      "Components1MheujySchemasModelsAnalyzeresultsDocumentelementsObjectfieldPropertiesValueobjectAdditionalproperties"
  }
};

export const PageOperationsOperationInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PageOperationsOperationInfo",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "OperationsOperationInfo"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationsOperationInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationsOperationInfo",
    modelProperties: {
      operationId: {
        serializedName: "operationId",
        required: true,
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String"
        }
      },
      percentCompleted: {
        serializedName: "percentCompleted",
        type: {
          name: "Number"
        }
      },
      createdDateTime: {
        serializedName: "createdDateTime",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      lastUpdatedDateTime: {
        serializedName: "lastUpdatedDateTime",
        required: true,
        type: {
          name: "DateTime"
        }
      },
      kind: {
        serializedName: "kind",
        required: true,
        type: {
          name: "String"
        }
      },
      resourceLocation: {
        serializedName: "resourceLocation",
        required: true,
        type: {
          name: "String"
        }
      },
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const ModelsModelInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ModelsModelInfo",
    modelProperties: {
      ...ModelsModelSummary.type.modelProperties,
      docTypes: {
        serializedName: "docTypes",
        type: {
          name: "Dictionary",
          value: { type: { name: "Composite", className: "ModelsDocTypeInfo" } }
        }
      }
    }
  }
};

export const OperationsGetOperationResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationsGetOperationResponse",
    modelProperties: {
      ...OperationsOperationInfo.type.modelProperties,
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorModel"
        }
      },
      result: {
        serializedName: "result",
        type: {
          name: "Composite",
          className: "ModelsModelInfo"
        }
      }
    }
  }
};

export const FormRecognizerBuildModelHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FormRecognizerBuildModelHeaders",
    modelProperties: {
      operationLocation: {
        serializedName: "operation-location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FormRecognizerComposeModelHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FormRecognizerComposeModelHeaders",
    modelProperties: {
      operationLocation: {
        serializedName: "operation-location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ModelsCopyModelToHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ModelsCopyModelToHeaders",
    modelProperties: {
      operationLocation: {
        serializedName: "operation-location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ModelsAnalyzeHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ModelsAnalyzeHeaders",
    modelProperties: {
      operationLocation: {
        serializedName: "operation-location",
        type: {
          name: "String"
        }
      }
    }
  }
};
