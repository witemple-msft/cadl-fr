// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace FormRecognizerClient.Models
{
    /// <summary> The ModelsAnalyzeResultsDocumentElementsTable. </summary>
    public partial class ModelsAnalyzeResultsDocumentElementsTable
    {
        /// <summary> Initializes a new instance of ModelsAnalyzeResultsDocumentElementsTable. </summary>
        /// <param name="rowCount"></param>
        /// <param name="columnCount"></param>
        /// <param name="cells"></param>
        /// <param name="spans"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="cells"/> or <paramref name="spans"/> is null. </exception>
        internal ModelsAnalyzeResultsDocumentElementsTable(int rowCount, int columnCount, IEnumerable<ModelsAnalyzeResultsDocumentElementsTableCell> cells, IEnumerable<ModelsAnalyzeResultsDocumentElementsSpan> spans)
        {
            if (cells == null)
            {
                throw new ArgumentNullException(nameof(cells));
            }
            if (spans == null)
            {
                throw new ArgumentNullException(nameof(spans));
            }

            RowCount = rowCount;
            ColumnCount = columnCount;
            Cells = cells.ToList();
            BoundingRegions = new ChangeTrackingList<ModelsAnalyzeResultsDocumentElementsBoundingRegion>();
            Spans = spans.ToList();
        }

        /// <summary> Initializes a new instance of ModelsAnalyzeResultsDocumentElementsTable. </summary>
        /// <param name="rowCount"></param>
        /// <param name="columnCount"></param>
        /// <param name="cells"></param>
        /// <param name="boundingRegions"></param>
        /// <param name="spans"></param>
        internal ModelsAnalyzeResultsDocumentElementsTable(int rowCount, int columnCount, IReadOnlyList<ModelsAnalyzeResultsDocumentElementsTableCell> cells, IReadOnlyList<ModelsAnalyzeResultsDocumentElementsBoundingRegion> boundingRegions, IReadOnlyList<ModelsAnalyzeResultsDocumentElementsSpan> spans)
        {
            RowCount = rowCount;
            ColumnCount = columnCount;
            Cells = cells;
            BoundingRegions = boundingRegions;
            Spans = spans;
        }

        /// <summary> Gets the row count. </summary>
        public int RowCount { get; }
        /// <summary> Gets the column count. </summary>
        public int ColumnCount { get; }
        /// <summary> Gets the cells. </summary>
        public IReadOnlyList<ModelsAnalyzeResultsDocumentElementsTableCell> Cells { get; }
        /// <summary> Gets the bounding regions. </summary>
        public IReadOnlyList<ModelsAnalyzeResultsDocumentElementsBoundingRegion> BoundingRegions { get; }
        /// <summary> Gets the spans. </summary>
        public IReadOnlyList<ModelsAnalyzeResultsDocumentElementsSpan> Spans { get; }
    }
}
