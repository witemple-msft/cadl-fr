// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace FormRecognizerClient.Models
{
    /// <summary> The ModelsModelInfo. </summary>
    public partial class ModelsModelInfo : ModelsModelSummary
    {
        /// <summary> Initializes a new instance of ModelsModelInfo. </summary>
        /// <param name="modelId"></param>
        /// <param name="createdDateTime"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="modelId"/> is null. </exception>
        internal ModelsModelInfo(string modelId, DateTimeOffset createdDateTime) : base(modelId, createdDateTime)
        {
            if (modelId == null)
            {
                throw new ArgumentNullException(nameof(modelId));
            }

            DocTypes = new ChangeTrackingDictionary<string, ModelsDocTypeInfo>();
        }

        /// <summary> Initializes a new instance of ModelsModelInfo. </summary>
        /// <param name="modelId"></param>
        /// <param name="createdDateTime"></param>
        /// <param name="apiVersion"></param>
        /// <param name="tags"> Dictionary of &lt;string&gt;. </param>
        /// <param name="docTypes"> Dictionary of &lt;Models.DocTypeInfo&gt;. </param>
        internal ModelsModelInfo(string modelId, DateTimeOffset createdDateTime, string apiVersion, IReadOnlyDictionary<string, string> tags, IReadOnlyDictionary<string, ModelsDocTypeInfo> docTypes) : base(modelId, createdDateTime, apiVersion, tags)
        {
            DocTypes = docTypes;
        }

        /// <summary> Dictionary of &lt;Models.DocTypeInfo&gt;. </summary>
        public IReadOnlyDictionary<string, ModelsDocTypeInfo> DocTypes { get; }
    }
}
