// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace FormRecognizerClient.Models
{
    /// <summary> The CopyAuthorization. </summary>
    public partial class CopyAuthorization
    {
        /// <summary> Initializes a new instance of CopyAuthorization. </summary>
        /// <param name="targetResourceId"></param>
        /// <param name="targetResoruceRegion"></param>
        /// <param name="targetModelId"></param>
        /// <param name="targetModelLocation"></param>
        /// <param name="accessToken"></param>
        /// <param name="expirationDateTime"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="targetResourceId"/>, <paramref name="targetResoruceRegion"/>, <paramref name="targetModelId"/>, <paramref name="targetModelLocation"/>, <paramref name="accessToken"/> or <paramref name="expirationDateTime"/> is null. </exception>
        public CopyAuthorization(string targetResourceId, string targetResoruceRegion, string targetModelId, string targetModelLocation, string accessToken, string expirationDateTime)
        {
            if (targetResourceId == null)
            {
                throw new ArgumentNullException(nameof(targetResourceId));
            }
            if (targetResoruceRegion == null)
            {
                throw new ArgumentNullException(nameof(targetResoruceRegion));
            }
            if (targetModelId == null)
            {
                throw new ArgumentNullException(nameof(targetModelId));
            }
            if (targetModelLocation == null)
            {
                throw new ArgumentNullException(nameof(targetModelLocation));
            }
            if (accessToken == null)
            {
                throw new ArgumentNullException(nameof(accessToken));
            }
            if (expirationDateTime == null)
            {
                throw new ArgumentNullException(nameof(expirationDateTime));
            }

            TargetResourceId = targetResourceId;
            TargetResoruceRegion = targetResoruceRegion;
            TargetModelId = targetModelId;
            TargetModelLocation = targetModelLocation;
            AccessToken = accessToken;
            ExpirationDateTime = expirationDateTime;
        }

        /// <summary> Gets or sets the target resource id. </summary>
        public string TargetResourceId { get; set; }
        /// <summary> Gets or sets the target resoruce region. </summary>
        public string TargetResoruceRegion { get; set; }
        /// <summary> Gets or sets the target model id. </summary>
        public string TargetModelId { get; set; }
        /// <summary> Gets or sets the target model location. </summary>
        public string TargetModelLocation { get; set; }
        /// <summary> Gets or sets the access token. </summary>
        public string AccessToken { get; set; }
        /// <summary> Gets or sets the expiration date time. </summary>
        public string ExpirationDateTime { get; set; }
    }
}
