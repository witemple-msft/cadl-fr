// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace FormRecognizerClient.Models
{
    /// <summary> The ModelsAnalyzeResultsAnalyzeResult. </summary>
    public partial class ModelsAnalyzeResultsAnalyzeResult
    {
        /// <summary> Initializes a new instance of ModelsAnalyzeResultsAnalyzeResult. </summary>
        /// <param name="apiVersion"></param>
        /// <param name="modelId"></param>
        /// <param name="stringIndexType"></param>
        /// <param name="content"></param>
        /// <param name="pages"></param>
        /// <param name="tables"></param>
        /// <param name="keyValuePairs"></param>
        /// <param name="entities"></param>
        /// <param name="styles"></param>
        /// <param name="languages"></param>
        /// <param name="documents"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="apiVersion"/>, <paramref name="modelId"/>, <paramref name="content"/>, <paramref name="pages"/>, <paramref name="tables"/>, <paramref name="keyValuePairs"/>, <paramref name="entities"/>, <paramref name="styles"/>, <paramref name="languages"/> or <paramref name="documents"/> is null. </exception>
        internal ModelsAnalyzeResultsAnalyzeResult(string apiVersion, string modelId, ModelsStringIndexType stringIndexType, string content, IEnumerable<ModelsAnalyzeResultsDocumentElementsPage> pages, IEnumerable<ModelsAnalyzeResultsDocumentElementsTable> tables, IEnumerable<ModelsAnalyzeResultsDocumentElementsKeyValuePair> keyValuePairs, IEnumerable<ModelsAnalyzeResultsDocumentElementsEntity> entities, IEnumerable<ModelsAnalyzeResultsDocumentElementsStyle> styles, IEnumerable<ModelsAnalyzeResultsDocumentElementsLanguage> languages, IEnumerable<ModelsAnalyzeResultsDocumentElementsDocument> documents)
        {
            if (apiVersion == null)
            {
                throw new ArgumentNullException(nameof(apiVersion));
            }
            if (modelId == null)
            {
                throw new ArgumentNullException(nameof(modelId));
            }
            if (content == null)
            {
                throw new ArgumentNullException(nameof(content));
            }
            if (pages == null)
            {
                throw new ArgumentNullException(nameof(pages));
            }
            if (tables == null)
            {
                throw new ArgumentNullException(nameof(tables));
            }
            if (keyValuePairs == null)
            {
                throw new ArgumentNullException(nameof(keyValuePairs));
            }
            if (entities == null)
            {
                throw new ArgumentNullException(nameof(entities));
            }
            if (styles == null)
            {
                throw new ArgumentNullException(nameof(styles));
            }
            if (languages == null)
            {
                throw new ArgumentNullException(nameof(languages));
            }
            if (documents == null)
            {
                throw new ArgumentNullException(nameof(documents));
            }

            ApiVersion = apiVersion;
            ModelId = modelId;
            StringIndexType = stringIndexType;
            Content = content;
            Pages = pages.ToList();
            Tables = tables.ToList();
            KeyValuePairs = keyValuePairs.ToList();
            Entities = entities.ToList();
            Styles = styles.ToList();
            Languages = languages.ToList();
            Documents = documents.ToList();
        }

        /// <summary> Initializes a new instance of ModelsAnalyzeResultsAnalyzeResult. </summary>
        /// <param name="apiVersion"></param>
        /// <param name="modelId"></param>
        /// <param name="stringIndexType"></param>
        /// <param name="content"></param>
        /// <param name="pages"></param>
        /// <param name="tables"></param>
        /// <param name="keyValuePairs"></param>
        /// <param name="entities"></param>
        /// <param name="styles"></param>
        /// <param name="languages"></param>
        /// <param name="documents"></param>
        internal ModelsAnalyzeResultsAnalyzeResult(string apiVersion, string modelId, ModelsStringIndexType stringIndexType, string content, IReadOnlyList<ModelsAnalyzeResultsDocumentElementsPage> pages, IReadOnlyList<ModelsAnalyzeResultsDocumentElementsTable> tables, IReadOnlyList<ModelsAnalyzeResultsDocumentElementsKeyValuePair> keyValuePairs, IReadOnlyList<ModelsAnalyzeResultsDocumentElementsEntity> entities, IReadOnlyList<ModelsAnalyzeResultsDocumentElementsStyle> styles, IReadOnlyList<ModelsAnalyzeResultsDocumentElementsLanguage> languages, IReadOnlyList<ModelsAnalyzeResultsDocumentElementsDocument> documents)
        {
            ApiVersion = apiVersion;
            ModelId = modelId;
            StringIndexType = stringIndexType;
            Content = content;
            Pages = pages;
            Tables = tables;
            KeyValuePairs = keyValuePairs;
            Entities = entities;
            Styles = styles;
            Languages = languages;
            Documents = documents;
        }

        /// <summary> Gets the api version. </summary>
        public string ApiVersion { get; }
        /// <summary> Gets the model id. </summary>
        public string ModelId { get; }
        /// <summary> Gets the string index type. </summary>
        public ModelsStringIndexType StringIndexType { get; }
        /// <summary> Gets the content. </summary>
        public string Content { get; }
        /// <summary> Gets the pages. </summary>
        public IReadOnlyList<ModelsAnalyzeResultsDocumentElementsPage> Pages { get; }
        /// <summary> Gets the tables. </summary>
        public IReadOnlyList<ModelsAnalyzeResultsDocumentElementsTable> Tables { get; }
        /// <summary> Gets the key value pairs. </summary>
        public IReadOnlyList<ModelsAnalyzeResultsDocumentElementsKeyValuePair> KeyValuePairs { get; }
        /// <summary> Gets the entities. </summary>
        public IReadOnlyList<ModelsAnalyzeResultsDocumentElementsEntity> Entities { get; }
        /// <summary> Gets the styles. </summary>
        public IReadOnlyList<ModelsAnalyzeResultsDocumentElementsStyle> Styles { get; }
        /// <summary> Gets the languages. </summary>
        public IReadOnlyList<ModelsAnalyzeResultsDocumentElementsLanguage> Languages { get; }
        /// <summary> Gets the documents. </summary>
        public IReadOnlyList<ModelsAnalyzeResultsDocumentElementsDocument> Documents { get; }
    }
}
