// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace FormRecognizerClient.Models
{
    /// <summary> The ModelsAnalyzeResultsDocumentElementsLanguage. </summary>
    public partial class ModelsAnalyzeResultsDocumentElementsLanguage
    {
        /// <summary> Initializes a new instance of ModelsAnalyzeResultsDocumentElementsLanguage. </summary>
        /// <param name="languageCode"></param>
        /// <param name="spans"></param>
        /// <param name="confidence"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="languageCode"/> or <paramref name="spans"/> is null. </exception>
        internal ModelsAnalyzeResultsDocumentElementsLanguage(string languageCode, IEnumerable<ModelsAnalyzeResultsDocumentElementsSpan> spans, double confidence)
        {
            if (languageCode == null)
            {
                throw new ArgumentNullException(nameof(languageCode));
            }
            if (spans == null)
            {
                throw new ArgumentNullException(nameof(spans));
            }

            LanguageCode = languageCode;
            Spans = spans.ToList();
            Confidence = confidence;
        }

        /// <summary> Initializes a new instance of ModelsAnalyzeResultsDocumentElementsLanguage. </summary>
        /// <param name="languageCode"></param>
        /// <param name="spans"></param>
        /// <param name="confidence"></param>
        internal ModelsAnalyzeResultsDocumentElementsLanguage(string languageCode, IReadOnlyList<ModelsAnalyzeResultsDocumentElementsSpan> spans, double confidence)
        {
            LanguageCode = languageCode;
            Spans = spans;
            Confidence = confidence;
        }

        /// <summary> Gets the language code. </summary>
        public string LanguageCode { get; }
        /// <summary> Gets the spans. </summary>
        public IReadOnlyList<ModelsAnalyzeResultsDocumentElementsSpan> Spans { get; }
        /// <summary> Gets the confidence. </summary>
        public double Confidence { get; }
    }
}
