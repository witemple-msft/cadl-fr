// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace FormRecognizerClient.Models
{
    public partial class ModelsAnalyzeResultsDocumentElementsTableCell
    {
        internal static ModelsAnalyzeResultsDocumentElementsTableCell DeserializeModelsAnalyzeResultsDocumentElementsTableCell(JsonElement element)
        {
            Optional<ModelsAnalyzeResultsDocumentElementsTableCellKind> kind = default;
            int rowIndex = default;
            int columnIndex = default;
            Optional<int> rowSpan = default;
            Optional<int> columnSpan = default;
            string content = default;
            Optional<IReadOnlyList<ModelsAnalyzeResultsDocumentElementsBoundingRegion>> boundingRegions = default;
            IReadOnlyList<ModelsAnalyzeResultsDocumentElementsSpan> spans = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("kind"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    kind = new ModelsAnalyzeResultsDocumentElementsTableCellKind(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("rowIndex"))
                {
                    rowIndex = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("columnIndex"))
                {
                    columnIndex = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("rowSpan"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    rowSpan = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("columnSpan"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    columnSpan = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("content"))
                {
                    content = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("boundingRegions"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<ModelsAnalyzeResultsDocumentElementsBoundingRegion> array = new List<ModelsAnalyzeResultsDocumentElementsBoundingRegion>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(ModelsAnalyzeResultsDocumentElementsBoundingRegion.DeserializeModelsAnalyzeResultsDocumentElementsBoundingRegion(item));
                    }
                    boundingRegions = array;
                    continue;
                }
                if (property.NameEquals("spans"))
                {
                    List<ModelsAnalyzeResultsDocumentElementsSpan> array = new List<ModelsAnalyzeResultsDocumentElementsSpan>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(ModelsAnalyzeResultsDocumentElementsSpan.DeserializeModelsAnalyzeResultsDocumentElementsSpan(item));
                    }
                    spans = array;
                    continue;
                }
            }
            return new ModelsAnalyzeResultsDocumentElementsTableCell(Optional.ToNullable(kind), rowIndex, columnIndex, Optional.ToNullable(rowSpan), Optional.ToNullable(columnSpan), content, Optional.ToList(boundingRegions), spans);
        }
    }
}
