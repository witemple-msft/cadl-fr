# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum
from six import with_metaclass
from azure.core import CaseInsensitiveEnumMeta


class Enum1(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):

    TEXT_ELEMENTS = "textElements"
    UNICODE_CODE_POINT = "unicodeCodePoint"
    UTF16_CODE_UNIT = "utf16CodeUnit"

class ModelsAnalyzeResultsAnalyzeOperationStatus(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):

    NOT_STARTED = "notStarted"
    RUNNING = "running"
    FAILED = "failed"
    SUCCEEDED = "succeeded"

class ModelsAnalyzeResultsDocumentElementsPageUnit(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):

    PIXEL = "pixel"
    INCH = "inch"

class ModelsAnalyzeResultsDocumentElementsSelectionMarkFieldValueSelectionMark(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):

    SELECTED = "selected"
    UNSELECTED = "unselected"

class ModelsAnalyzeResultsDocumentElementsSelectionMarkState(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):

    SELECTED = "selected"
    UNSELECTED = "unselected"

class ModelsAnalyzeResultsDocumentElementsSignatureFieldValueSignature(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):

    SIGNED = "signed"
    UNSIGNED = "unsigned"

class ModelsAnalyzeResultsDocumentElementsTableCellKind(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):

    CONTENT = "content"
    ROW_HEADER = "rowHeader"
    COLUMN_HEADER = "columnHeader"
    STUB_HEAD = "stubHead"
    DESCRIPTION = "description"

class ModelsBuildMode(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):

    TEMPLATE = "template"
    NEURAL = "neural"

class ModelsDocumentFieldType(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):

    STRING = "string"
    DATE = "date"
    TIME = "time"
    PHONE_NUMBER = "phoneNumber"
    NUMBER = "number"
    INTEGER = "integer"
    SELECTION_MARK = "selectionMark"
    COUNTRY_REGION = "countryRegion"
    SIGNATURE = "signature"
    ARRAY = "array"
    OBJECT = "object"
    CURRENCY = "currency"

class ModelsStringIndexType(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):

    TEXT_ELEMENTS = "textElements"
    UNICODE_CODE_POINT = "unicodeCodePoint"
    UTF16_CODE_UNIT = "utf16CodeUnit"

class OperationsOperationKind(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):

    DOCUMENT_MODEL_BUILD = "documentModelBuild"
    DOCUMENT_MODEL_COMPOSE = "documentModelCompose"
    DOCUMENT_MODEL_COPY_TO = "documentModelCopyTo"

class OperationsOperationStatus(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):

    NOT_STARTED = "notStarted"
    RUNNING = "running"
    FAILED = "failed"
    SUCCEEDED = "succeeded"
    CANCELED = "canceled"
